<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="jar" default="build">
	<property name="module.dir" value="${work.dir}/${module}" />
	<available property="ivy-presented" file="${workspace.dir}/${module}/ivy.xml" />

	<patternset id="source-patternset">
		<include name="**/*.*" />
		<exclude name="**/.*/**" />
	</patternset>
	<patternset id="resource-patternset">
		<include name="**/*.css" />
		<include name="**/*.js" />
		<include name="**/*.properties" />
		<include name="**/*.gif" />
		<include name="**/*.png" />
		<include name="**/*.jpg" />
		<include name="**/*.swf" />
	</patternset>

	<target name="clean">
		<delete dir="${module.dir}" />
	</target>

	<target name="prepare-dependencies">
		<echo message="${product.revision}" />
		<ivy:resolve file="${workspace.dir}/${module}/ivy.xml" />
		<ivy:retrieve pattern="${work.dir}/lib/[artifact]-[revision](-[classifier]).[ext]" conf="compile" />
	</target>

	<target name="prepare-work-dir" depends="clean,prepare-dependencies">
		<mkdir dir="${module.dir}/src" />
		<mkdir dir="${module.dir}/test" />
		<mkdir dir="${module.dir}/bin" />

		<foreach list="${module.projects}" param="module.project" target="prepare-project-src" inheritall="true" />
	</target>

	<target name="prepare-project-src">
		<echo message="process sub project: ${module.project}" />
		<property name="project.root" value="${workspace.dir}/${module.project}" />

		<echo message="copy ${project.root}/src --> ${module.dir}/src" />
		<copy todir="${module.dir}/src" failonerror="false">
			<fileset dir="${project.root}/src">
				<patternset refid="source-patternset" />
			</fileset>
		</copy>

		<echo message="copy ${project.root}/test --> ${module.dir}/test" />
		<copy todir="${module.dir}/test" failonerror="false">
			<fileset dir="${project.root}/test">
				<patternset refid="source-patternset" />
			</fileset>
		</copy>
	</target>

	<target name="compile" depends="prepare-work-dir">
		<path id="classpath">
			<fileset dir="${work.dir}/lib">
				<include name="*.jar" />
				<exclude name="dorado-*" />
			</fileset>
			<fileset dir="${work.dir}/repository" includes="*.jar" />
		</path>
		<javac classpathref="classpath" srcdir="${module.dir}/src" destdir="${module.dir}/bin" debug="true" deprecation="true" nowarn="false" encoding="UTF-8" />
	</target>

	<target name="post-compile">
		<ant antfile="${basedir}/includes/client.xml" inheritRefs="true">
			<property name="dist" value="${module.dir}/bin/dorado" />
		</ant>
	</target>

	<target name="build-package-properties">
		<propertyfile file="${module.dir}/src/META-INF/dorado-package.properties">
			<entry key="version" value="${product.fullversion}" />
		</propertyfile>
	</target>

	<target name="jar" depends="compile,post-compile,build-package-properties">
		<echo message="copy ${module.dir}/src --> ${module.dir}/bin" />
		<copy todir="${module.dir}/bin">
			<fileset dir="${module.dir}/src" excludes="**/*.java" />
		</copy>

		<echo message="jar: ${module.dir}/bin --> ${target.lib.dir}/${product.name}-${module}-${product.revision}.jar" />
		<jar compress="true" jarfile="${target.lib.dir}/${product.name}-${module}-${product.revision}.jar">
			<fileset dir="${module.dir}/bin" />
			<manifest>
				<attribute name="Implementation-Title" value="${product.name}" />
				<attribute name="Implementation-Vendor" value="${product.vendor}" />
				<attribute name="Implementation-Version" value="${product.fullversion}" />
			</manifest>
		</jar>

		<echo message="jar: ${module.dir}/bin --> ${target.src.dir}/${product.name}-${module}-${product.revision}.src.jar" />
		<jar compress="true" jarfile="${target.src.dir}/${product.name}-${module}-${product.revision}-sources.jar">
			<fileset dir="${module.dir}/src" />
			<manifest>
				<attribute name="Implementation-Title" value="${product.name}" />
				<attribute name="Implementation-Vendor" value="${product.vendor}" />
				<attribute name="Implementation-Version" value="${product.fullversion}" />
			</manifest>
		</jar>
	</target>

	<target name="publish-to-temp-repository">
		<echo message="publish-to-temp-repository: ${target.lib.dir}/${product.name}-${module}-${product.revision}.jar" />
		<ivy:publish resolver="temp" forcedeliver="true" pubrevision="${product.revision}" overwrite="true">
			<artifacts pattern="${target.lib.dir}/[artifact]-[revision](-[classifier]).[ext]" />
		</ivy:publish>

		<!-- remove ivy temp file -->
		<delete file="${target.lib.dir}/ivy-${product.revision}.xml" />
	</target>

	<target name="make-pom" if="ivy-presented">
		<ivy:makepom ivyfile="${workspace.dir}/${module}/ivy.xml" pomfile="${target.pom.dir}/${product.name}-${module}.pom" templateFile="${resources.dir}/dorado-module-template.pom" conf="compile">
			<mapping conf="compile" scope="compile" />
		</ivy:makepom>
	</target>

	<target name="build" depends="jar,publish-to-temp-repository,make-pom" />
</project>
